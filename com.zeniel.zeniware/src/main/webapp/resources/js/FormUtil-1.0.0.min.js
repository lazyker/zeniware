function fn_setComboBox(t) {
    $("#" + t[0].id + " option")
        .remove(), t.each(function () {
            var e = $(this);
            void 0 != $(t)
                .attr("comboid") && $.ajax({
                    url: "/ERPWeb/common/ZEN_Common.ashx?a=GetComboList"
                    , data: {
                        CODE_ID: $(e)
                            .attr("comboid")
                    }
                    , type: "post"
                    , async: !1
                    , success: function (t) {
                        $(e)
                            .append('<option value="">선택</option>');
                        for (var r = 0; r < t.returnValue.length; r++) $(e)
                            .append('<option value="' + t.returnValue[r].value + '">' + t.returnValue[r].name + "</option>")
                    }
                })
        })
}

function fn_setGridComboBox(t) {
    for (var e = new Array, r = "", n = 0; n < t.length; n++) r = "", $.ajax({
        url: "/ERPWeb/common/ZEN_Common.ashx?a=GetComboList"
        , data: {
            CODE_ID: t[n]
        }
        , type: "post"
        , async: !1
        , success: function (t) {
            r += ":;";
            for (var e = 0; e < t.returnValue.length; e++) r += t.returnValue[e].value + ":" + t.returnValue[e].name + ";";
            r = r.substring(0, r.length - 1)
        }
    }), e[n] = r;
    return e
}

function fn_SendData(t, e, r) {
    var n = "";
    $.ajax({
        url: e
        , data: t
        , type: "post"
        , async: !0
        , success: function (t) {
            r(t)
        }
        , beforeSend: function () {
            $("#ajax_indicator")
                .show()
        }
        , complete: function () {
            if ("1" == $("#_userlog")
                .val()) {
                n = fn_jsonToString(t);
                var r = {
                    IN_USER: _userid
                    , IN_BUBIN: _userbubin
                    , IN_MENU: $("#_menuid")
                        .val()
                    , IN_URL: e
                    , IN_PARAM: n
                };
                fn_setUserLog(r)
            }
            $("#ajax_indicator")
                .hide()
        }
        , error: function (t, e) {
            Msgbox(4, "", "e2", t.status + ": (" + e + ")" + t.responseText), $("#ajax_indicator")
                .hide()
        }
    })
}

function fn_jsonToString(t) {
    var e = [];
    for (var r in t) {
        var n = t[r];
        n && e.push(r.toString() + "=" + n)
    }
    return "{" + e.join(", ") + "}"
}

function fn_setUserLog(t) {
    $.ajax({
        url: "/ERPWeb/common/ZEN_Common.ashx?a=SetUserLog"
        , data: t
        , type: "post"
        , async: !0
        , success: function () {}
        , beforeSend: function () {}
        , complete: function () {}
        , error: function (t, e) {
            Msgbox(4, "", "e2", t.status + ": (" + e + ")" + t.responseText)
        }
    })
}

function Msgbox(t, e, r, n, a) {
    "undefined" == typeof r && (r = ""), "undefined" == typeof n && (n = "");
    var o = ""
        , i = 400
        , s = 150;
    return 4 == t && (i = 330), o = MsgboxOrg(t, e, r, n, i, s, a), void 0 != o ? o : void 0
}

function MsgboxOrg(t, e, r, n, a, o, i) {
    var s = ""
        , l = (screen.height - o) / 2
        , u = (screen.width - a) / 2
        , f = "dialogWidth:" + a + "px;dialogHeight:" + o + "px;dialogTop:" + l + "dialogLeft:" + u + "px;status:no;resizable:yes;help:no;scroll:no"
        , c = "/ERPWeb/common/popup/popMsgBox.aspx?Type=" + t + "&Field=" + encodeURI(e) + "&ResourceKey=" + r + "&Error_Msg=" + encodeURI(n) + "&Icon=" + i;
    return s = window.showModalDialog(c, "", f), void 0 == s && (s = ""), s
}

function modal_layer(t, e, r) {
    var n = ""
        , a = (screen.height - r) / 2
        , o = (screen.width - e) / 2
        , i = "dialogWidth:" + e + "px;dialogHeight:" + r + "px;dialogTop:" + a + "dialogLeft:" + o + "px;status:no;resizable:no;help:no;scroll:no";
    return n = window.showModalDialog(t, "", i), void 0 != n ? n : void 0
}

function fn_getDateFormmat(t) {
    return 8 == t.length ? t.substring(0, 4) + "-" + t.substring(4, 6) + "-" + t.substring(6, 8) : 6 == t.length ? t.substring(0, 4) + "-" + t.substring(4, 6) : ""
}

function fn_getBubinFormmat(t) {
    return 13 == t.length ? t.substring(0, 6) + "-" + t.substring(6, 13) : t
}

function fn_getBizFormmat(t) {
    return 10 == t.length ? t.substring(0, 3) + "-" + t.substring(3, 5) + "-" + t.substring(5, 10) : t
}

function fn_getJuminFormmat(t) {
    return 13 == t.length ? t.substring(0, 6) + "-" + t.substring(6, 13) : t
}

function fn_getTimeFormmat(t) {
    return 4 != t.length ? "" : fn_IsTime(t + "00") ? t.substring(0, 2) + ":" + t.substring(2, 4) : ""
}

function fn_getTelFormat(t) {
    return "" != t ? t.replace(/(^02.{0}|^01.{1}|[0-9]{3})([0-9]+)([0-9]{4})/, "$1-$2-$3") : void 0
}

function fn_getZipFormat(t) {
    return "" != t ? t.substr(0, 3) + "-" + t.substr(3, 3) : void 0
}

function fn_replaceAll(strValue, searchVal, replaceVal) {
    try {
        return strValue.replace(eval("/" + searchVal + "/gi"), replaceVal)
    } catch (e) {}
}

function fn_isJuminNo(t) {
    var e = fn_replaceAll(t, "-", "");
    if (13 != e.toString()
        .length) return !1;
    if (!e.match(/^\d{6}\d{7}$/)) return !1;
    var r, n = e.substr(6, 1);
    "1" == n || "2" == n || "5" == n || "6" == n ? r = "19" + e.substr(0, 2) : ("3" == n || "4" == n || "7" == n || "8" == n) && (r = "20" + e.substr(0, 2));
    var a = e.substr(2, 2) - 1
        , o = e.substr(4, 2)
        , s = new Date(r, a, o);
    if (s.getYear() % 100 != e.substr(0, 2) || s.getMonth() != a || s.getDate() != o) return !1;
    for (buf = new Array(13), i = 0; i < 6; i++) buf[i] = parseInt(e.charAt(i));
    for (i = 6; i < 13; i++) buf[i] = parseInt(e.charAt(i));
    for (multipliers = [2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5], i = 0, sum = 0; i < 12; i++) sum += buf[i] *= multipliers[i];
    return (11 - sum % 11) % 10 != buf[12] ? !1 : !0
}

function fn_isCustNo(t) {
    var e = fn_replaceAll(t, "-", "");
    if (10 != e.length) return !1;
    var r, n, a, o = new Array(1, 3, 7, 1, 3, 7, 1, 3, 5, 1)
        , i = 0;
    for (r = 0; 7 >= r; r++) i += o[r] * e.charAt(r);
    return n = "0" + o[8] * e.charAt(8), n = n.substring(n.length - 2, n.length), i += Math.floor(n.charAt(0)) + Math.floor(n.charAt(1)), a = (10 - i % 10) % 10, Math.floor(e.charAt(9)) == a ? !0 : !1
}

function fn_isForeignNo(t) {
    var e = fn_replaceAll(t, "-", "");
    if (13 != e.length) return !1;
    var r = Number(e.substr(2, 2))
        , n = Number(e.substr(4, 2));
    if (1 > r || r > 12) return !1;
    if (1 > n || n > 31) return !1;
    for (var a = 0, o = 0, i = new Array(13), s = [2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5], l = 0; 13 > l; l++) i[l] = Number(e.charAt(l));
    if (i[11] < 6) return !1;
    if (o = 10 * i[7] + i[8], o % 2 != 0) return !1;
    for (var u = 0; 12 > u; u++) a += i[u] * s[u];
    return a = 11 - a % 11, a >= 10 && (a -= 10), a += 2, a >= 10 && (a -= 10), i[12] == a ? !0 : !1
}

function fn_isBubindNo(t) {
    var e = fn_replaceAll(t, "-", "");
    if (13 != e.length) return !1;
    for (var r = 0, n = new Array(13), a = [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2], o = 0; 13 > o; o++) n[o] = Number(e.charAt(o));
    for (var i = 0; 12 > i; i++) r += n[i] * a[i];
    return r = (10 - r % 10) % 10, n[12] == r ? !0 : !1
}

function fn_trim(t) {
    if (null == t) return "";
    if ("undefined" == new String(t)
        .valueOf()) return "";
    if (null == new String(t)) return "";
    var e = new String(t)
        .replace(/^\s+|\s+$/g, "");
    return e
}

function fn_isNull(t) {
    if ("undefined" == new String(t)
        .valueOf()) return !0;
    if (null == t) return !0;
    var e = new String(t);
    return null == e ? !0 : 0 == e.toString()
        .length ? !0 : !1
}

function fn_appendComma(t, e) {
    if (null == t) return 0;
    null == e && (e = 0);
    var r = parseFloat(t);
    r = r.toFixed(e);
    var n = new String(r)
        , a = n.split(".")
        , o = ""
        , s = 0;
    for (i = a[0].length - 1; i >= 0; i--) i != n.length && 3 == s ? (o = 0 == i && "-" == a[0].charAt(0) ? a[0].charAt(i) + o : a[0].charAt(i) + "," + o, s = 0) : o = a[0].charAt(i) + o, s++;
    return a.length > 1 && (o = o + "." + a[1]), o
}

function fn_removeComma(t) {
    return fn_replaceAll(t, ",", "")
}

function fn_isNumeric(t) {
    var e;
    for (pcnt = 0, e = 0; e < t.length; e++)
        if ("." == t.charAt(e) && pcnt++, (t.charAt(e) < "0" || t.charAt(e) > "9") && ("." != t.charAt(e) || pcnt > 1)) {
            if ("-" == t.charAt(e) && 0 == e) continue;
            return !1
        }
    return !0
}

function fn_getNumber(t) {
    var e = new RegExp("\\D", "g")
        , r = t.replace(e, "");
    return r
}

function fn_set10To16(t) {
    var e;
    return e = t.toString(16)
}

function fn_set16To10(t) {
    var e;
    return e = t.toString(10)
}

function fn_getNumToHan(t) {
    var e = new Array("", "일", "이", "삼", "사", "오", "육", "칠", "팔", "구", "십")
        , r = new Array("", "십", "백", "천", "", "십", "백", "천", "", "십", "백", "천", "", "십", "백", "천", "", "십", "백", "천")
        , n = new Array("", "만", "억", "조", "경")
        , a = fn_replaceAll(t, ",", "")
        , o = "";
    "-" == a.substring(0, 1) && (o = "-", a = a.substring(1, a.length));
    var s = "";
    if (!fn_isNumeric(a)) return "";
    for (i = 0; i < a.length; i++) fD = Math.floor(i / 4), fM = i % 4, str = "", han = e[a.charAt(a.length - (i + 1))], "" != han && (str = han + r[i]), fD > 0 && 3 == fM && "0000" == a.substring(a.length - (i + 1), a.length - (i + 1) + 4) && (s = s.substring(1, s.length)), fD > 0 && 0 == fM && (str += n[fD]), s = str + s;
    return o + s
}

function fn_isEmail(t) {
    var e = !1
        , r = ""
        , n = "[a-z0-9]+[a-z0-9.,]+@[a-z0-9]+[a-z0-9.,]+\\.[a-z0-9]+"
        , a = new RegExp(n, "ig");
    return r = a.exec(t), e = null == r ? !1 : 0 == r.index && r[0].length == strValue.length ? !0 : !1
}

function fn_removeSpecialChar(t) {
    var e = "~!@#$%^&*-+./=_`{|}()\\?<>";
    for (i = 0; i < t.length; i++)
        for (j = 0; j < e.length; j++) t.charAt(i) == e.charAt(j) && (t = t.replace(t.charAt(i), ""));
    return t
}

function fn_isDate(t) {
    strDate = fn_trim(t);
    var e;
    switch (strDate.length) {
    case 6:
        e = fn_isYM(strDate);
        break;
    case 8:
        e = fn_isYMD(strDate);
        break;
    default:
        e = !1
    }
    return e
}

function fn_isYMD(t) {
    var e = fn_trim(t)
        .replace("-", "");
    if (8 != e.length) return !1;
    var r = e.substr(0, 6);
    if (!fn_isYM(r)) return !1;
    var n = Number(e.substr(6, 2))
        , a = Number(fn_getLastDay(r));
    return 1 > n || n > a ? !1 : !0
}

function fn_isYM(t) {
    var e = fn_trim(t);
    if (6 != e.length) return !1;
    var r = (Number(e.substr(0, 4)), Number(e.substr(4, 2)));
    return 1 > r || r > 12 ? !1 : !0
}

function fn_getTodayTime() {
    var t = new Date
        , e = t.getFullYear()
        .toString();
    return e += (t.getMonth() + 1 + "")
        .padLeft(2, "0"), e += (t.getDate() + "")
        .padLeft(2, "0"), e += (t.getHours() + "")
        .padLeft(2, "0"), e += (t.getMinutes() + "")
        .padLeft(2, "0"), e += (t.getSeconds() + "")
        .padLeft(2, "0")
}

function fn_getServerTodayTime() {
    var t = "";
    return $.ajax({
        type: "GET"
        , async: !1
        , url: "/ERPWeb/common/HRN_Common.ashx"
        , success: function (e, r, n) {
            var a = new Date(n.getResponseHeader("Date"));
            t = a.getFullYear()
                .toString(), t += (a.getMonth() + 1 + "")
                .padLeft(2, "0"), t += (a.getDate() + "")
                .padLeft(2, "0"), t += (a.getHours() + "")
                .padLeft(2, "0"), t += (a.getMinutes() + "")
                .padLeft(2, "0"), t += (a.getSeconds() + "")
                .padLeft(2, "0")
        }
    }), t
}

function fn_getLastDay(t) {
    var e, r = fn_trim(t);
    if (null == r) {
        var n = fn_getToday();
        e = new Date(n.substr(0, 4), parseInt(n.substr(4, 2)), 0)
    } else e = new Date(r.substr(0, 4), parseInt(r.substr(4, 2)), 0);
    return e = e.getDate()
}

function fn_isTime(_time) {
    var strTime = fn_trim(_time);
    if (6 != strTime.length || !isNumeric(strTime)) return !1;
    var t01 = eval(strTime.substring(0, 2))
        , t02 = eval(strTime.substring(2, 2))
        , t03 = eval(strTime.substring(4, 2));
    return 0 > t01 || t01 > 23 || 0 > t02 || t02 > 59 || 0 > t03 || t03 > 59 ? !1 : !0
}

function fn_getTimeToSec(t) {
    var e = fn_trim(t)
        , r = -1;
    if (e.length >= 6 && isNumeric(e)) {
        var n = e;
        r = 3600 * toNumber(e.substr(0, e.length - 4)) + 60 * toNumber(n.substr(2, 2)) + toNumber(n.slice(4, 2))
    }
    return r
}

function fn_getSecToTime(t) {
    var e, r = toNumber(t);
    if (r >= 0) {
        var n = Math.floor(r / 3600)
            , a = Math.floor((r - 3600 * n) / 60)
            , o = Math.floor((r - 3600 * n) % 60);
        n = n.toString(), a = a.toString(), o = o.toString(), e = n.padLeft(2, "0") + a.padLeft(2, "0") + o.padLeft(2, "0")
    }
    return e
}

function fn_getAge(t, e) {
    var r = fn_trim(t)
        , n = fn_trim(e)
        , a = -1;
    if (fn_isNull(n) && (n = fn_getToday()), fn_isDate(r) && fn_isDate(n)) {
        var o = toNumber(n.substr(0, 4)) - toNumber(r.substr(0, 4))
            , i = toNumber(n.substr(4, 4)) - toNumber(r.substr(4, 4));
        a = o, 0 > i && (a -= 1)
    }
    return a
}

function fn_getLengthByte(t) {
    for (var e = t.toString(), r = 0, n = 0; n < e.length; n++) r += e.charCodeAt(n) > 127 ? 2 : 1;
    return r
}

function fn_getDateToStr(t) {
    var e = t.getYear()
        .toString()
        , r = (t.getMonth() + 1)
        .toString()
        , n = t.getDate()
        .toString();
    return 2 == e.length ? e = "19" + e : 1 == e.length && (e = "190" + e), 1 == r.length && (r = "0" + r), 1 == n.length && (n = "0" + n), e + r + n
}

function fn_addDate(t, e) {
    var r = fn_trim(t)
        , n = new Date
        , a = r.substr(0, 4)
        , o = r.substr(4, 2)
        , i = r.substr(6, 2);
    return n = new Date(a, o - 1, i), n.setYear(n.getYear()), n.setMonth(n.getMonth()), n.setDate(n.getDate() + e), fn_getDateToStr(n)
}

function fn_addMonth(t, e) {
    var r = fn_trim(t)
        , n = new Date(r.substr(0, 4), r.substr(4, 2), r.substr(6, 2));
    n.setMonth(n.getMonth() - 1 + e);
    var a = 32 - new Date(n.getYear(), n.getMonth(), 32)
        .getDate()
        , o = (new Date)
        .getDate();
    return n.setDate(o > a ? a : o), fn_getDateToStr(n)
        .substr(0, 8)
}

function fn_getDiffDate(t, e) {
    var r = fn_trim(t)
        , n = fn_trim(e)
        , a = new Date(parseInt(n.substring(0, 4), 10), parseInt(n.substring(4, 6) - 1, 10), parseInt(n.substring(6, 8), 10))
        , o = new Date(parseInt(r.substring(0, 4), 10), parseInt(r.substring(4, 6) - 1, 10), parseInt(r.substring(6, 8), 10));
    return parseInt((a - o) / 864e5)
}

function fn_getDiffMonth(t, e) {
    var r, n, a = fn_trim(t)
        , o = fn_trim(e);
    return r = 12 * parseInt(a.substr(0, 4), 10) + parseInt(a.substr(4, 2), 10), n = 12 * parseInt(o.substr(0, 4), 10) + parseInt(o.substr(4, 2), 10), n - r
}

function fn_getLastDateToStr(t) {
    var e, r = fn_trim(t)
        , n = "";
    return e = null == r ? (new Date)
        .addMonth(1) : new Date(parseInt(r.substr(0, 4)), parseInt(r.substr(4, 2)), 1), e = new Date(e)
        .addDate(-1 * new Date(e)
            .getDate()), n = new Date(e)
        .getFullYear() + (new Date(e)
            .getMonth() + 1 + "")
        .padLeft(2, "0") + (new Date(e)
            .getDate() + "")
        .padLeft(2, "0")
}

function fn_getStrToDate(t) {
    var e = new Date(parseInt(t.substr(0, 4)), parseInt(t.substr(4, 2)) - 1, parseInt(t.substr(6, 2)));
    return e
}

function fn_getToday() {
    var t = new Date
        , e = t.getFullYear() + (t.getMonth() + 1 + "")
        .padLeft(2, "0") + (t.getDate() + "")
        .padLeft(2, "0");
    return e
}

function fn_beforeShowPopup(t) {
    var e = null;
    return $.ajax({
        url: "/ERPWeb/common/ZEN_Common.ashx?a=GetPopupList"
        , data: {
            CODE_ID: t
        }
        , dataType: "json"
        , type: "post"
        , async: !1
        , success: function (t) {
            try {
                1 == t.rows.length && (e = t.rows[0])
            } catch (r) {
                alert(r)
            }
        }
        , error: function () {}
    }), e
}

function fn_showPopup(t) {
    var e, r, n, a, o = null;
    return a = fn_beforeShowPopup(t), null != a ? a : ($.ajax({
        url: "/ERPWeb/common/ZEN_Common.ashx?a=GetPopupInfo"
        , data: {
            CODE_ID: t
        }
        , dataType: "json"
        , type: "post"
        , async: !1
        , success: function (t) {
            try {
                1 == t.rows.length && (o = t.rows[0])
            } catch (e) {
                alert(e)
            }
        }
        , error: function () {}
    }), null != o && (e = o.POP_URL + "?param=" + encodeURI(t) + "&title=" + encodeURI(o.TITLE), r = o.POP_SIZE.split(",")[0], n = o.POP_SIZE.split(",")[1], a = window.showModalDialog(e, "", "dialogHeight:" + n + "px;dialogWidth:" + r + "px;status:no;location:no;resizable:no;help:no;scroll:no")), a)
}

function fn_showPopupAddr() {
    var t = "/ERPWeb/common/Popup/popZipCode.aspx"
        , e = "620"
        , r = "500"
        , n = window.showModalDialog(t, "", "dialogHeight:" + r + "px;dialogWidth:" + e + "px;status:no;location:no;resizable:no;help:no;scroll:no");
    return n
}

function fn_ShowFileUploadPopup(t) {
    var e = null
        , r = ""
        , n = ""
        , a = ""
        , o = ""
        , i = ""
        , s = t.split("^");
    return s.length > 0 && (o = s[0], i = s[1]), r = "/ERPWeb/common/Popup/popFileUpload.aspx?KIND=" + o + "&ATCH_NO=" + i, n = "450", a = "200", e = window.showModalDialog(r, "", "dialogHeight:" + a + "px;dialogWidth:" + n + "px;status:no;location:no;resizable:no;help:no;scroll:no")
}

function fn_ShowFileDownloadPopup(t) {
    var e = null
        , r = ""
        , n = ""
        , a = ""
        , o = ""
        , i = ""
        , s = t.split("^");
    return s.length > 0 && (o = s[0], i = s[1]), "" == i ? (Msgbox(1, "첨부파일이 없습니다", "", ""), !1) : (r = "/ERPWeb/common/Popup/popFileDownload.aspx?ATCH_NO=" + i, n = "450", a = "160", e = window.showModalDialog(r, "", "dialogHeight:" + a + "px;dialogWidth:" + n + "px;status:no;location:no;resizable:no;help:no;scroll:no"))
}

function fn_ShowFileUpDownPopup(t) {
    var e = null
        , r = ""
        , n = ""
        , a = ""
        , o = ""
        , i = ""
        , s = t.split("^");
    return s.length > 0 && (o = s[0], i = s[1]), r = "/ERPWeb/common/Popup/popFileUpDown.aspx?ATCH_NO=" + i, n = "450", a = "200", e = window.showModalDialog(r, "", "dialogHeight:" + a + "px;dialogWidth:" + n + "px;status:no;location:no;resizable:no;help:no;scroll:no")
}

function fn_ShowPDFUploadPopup(t) {
    var e = null
        , r = ""
        , n = ""
        , a = t.split("^");
    a.length > 0 && (r = a[0], n = a[1]);
    var o = ""
        , i = ""
        , s = "";
    return o = "/ERPWeb/common/Popup/popPDFUpload.aspx?KIND=PDF&YEAR=" + r + "&SABUN=" + n, i = "600", s = "180", e = window.showModalDialog(o, "", "dialogHeight:" + s + "px;dialogWidth:" + i + "px;status:no;location:no;resizable:no;help:no;scroll:no")
}

function fn_openForm(t, e, r, n) {
    var a = "tab_" + n;
    if (parent.$('.tabNav > div[id="' + a + '"]')
        .length > 0) {
        var o = parent.$('.tabNav > div[id="' + a + '"]')
            , i = $(o)
            .attr("id") + "_content"
            , s = $(o)
            .attr("id") + "_searchtext";
        parent.$("#" + i)
            .remove(), parent.$("#" + s)
            .remove(), parent.$(o)
            .remove()
    }
    r += -1 == r.indexOf("?") ? "?" : "&", r = r + "menuid=" + t, parent.$(".tabs")
        .removeClass("current"), parent.$("#contents iframe")
        .hide(), parent.$(".tabNav")
        .append('<div id="' + a + '" class="tabs current"><div class="bg_tabMid"><div class="bg_tabLeft"><span class="bg_tabRight"><span class="tab" title=\'' + e + "'><NOBR>" + e + '</NOBR></span><a href="#" class="remove" title="탭 닫기"></a></span></div></div></div>'), parent.$("#contents")
        .append('<input type="hidden" id="' + a + '_searchtext"'), parent.$("#contents")
        .append('<iframe id="' + a + '_content" src="' + r + '" marginwidth="0" marginheight="0" frameborder="0" width="100%" scrolling="auto" height="100%"></iframe>'), parent.$("#" + a + "_content")
        .show()
}

function fn_selectTab(t, e) {
    try {
        var r = $("#" + t)
            .find("ul li>a")
            .eq(e)
            .prop("href")
            , n = r.indexOf("#");
        if (-1 != n) {
            var a = r.substring(r.indexOf("#") + 1, r.length)
                , o = $("." + t + "_current")
                .attr("id");
            $("#" + o)
                .hide(), $("#" + o)
                .removeClass(t + "_current"), $("#" + a)
                .addClass(t + "_current"), $("#" + a)
                .show(), $("#" + t)
                .tabs({
                    active: e
                })
        }
    } catch (i) {
        alert(i.Message)
    }
}

function fn_selectedTabId(t) {
    try {
        var e = $("." + t + "_current")
            .attr("id");
        return e
    } catch (r) {
        alert(r.Message)
    }
}

function fn_excelExport(t, e) {
    var r = "VIRTUAL";
    "undefined" == typeof e && (r = "NORMAL"), "VIRTUAL" == r ? fn_excelExport_virtual(t, e) : fn_excelExport_normal(t)
}

function fn_excelExport_normal(_gridname) {
    var selIds = $("#" + _gridname)
        .jqGrid("getDataIDs")
        , param1 = ""
        , param2 = ""
        , param3 = "";
    if (0 != selIds.length) {
        var colNames = $("#" + _gridname)
            .jqGrid("getGridParam", "colNames")
            , colModels = $("#" + _gridname)
            .jqGrid("getGridParam", "colModel")
            , sGrouping = $("#" + _gridname)
            .jqGrid("getGridParam", "grouping")
            , agroupingView = $("#" + _gridname)
            .jqGrid("getGridParam", "groupingView");
        1 == sGrouping && (param3 = ""), $("#" + _gridname)
            .jqGrid("getGridParam", "rownumbers") && (colNames[0] = "rn");
        var k = 0;
        $.each(selIds, function (i, v) {
            var ret = $("#" + _gridname)
                .jqGrid("getRowData", selIds[i]);
            if ("D" != ret.HIDDEN_STATE) {
                for (var j = 0, i = 0; i < colNames.length; i++)
                    if (!colModels[i].hidden && void 0 != colModels[i].name && "cb" != colModels[i].name) {
                        "rn" == colModels[i].name ? rValue = k + 1 : (rValue = eval("ret." + colModels[i].name), rValue = fn_replaceAll(rValue, "&nbsp;", " "));
                        var sFormatter = "";
                        void 0 != colModels[i].formatter && (colModels[i].formatter.toString()
                            .indexOf("Currency") > -1 ? sFormatter = "AMTformatter" : colModels[i].formatter.toString()
                            .indexOf("PRICEformatter") > -1 && (sFormatter = "PRICEformatter"), colModels[i].formatter.toString()
                            .indexOf("Number") > -1 ? sFormatter = "QTYformatter" : colModels[i].formatter.toString()
                            .indexOf("FAMTformatter") > -1 ? sFormatter = "FAMTformatter" : colModels[i].formatter.toString()
                            .indexOf("FPRICEformatter") > -1 ? sFormatter = "FPRICEformatter" : colModels[i].formatter.toString()
                            .indexOf("FQTYformatter") > -1 ? sFormatter = "FQTYformatter" : colModels[i].formatter.toString()
                            .indexOf("Decimal") > -1 ? sFormatter = "RATEformatter" : colModels[i].formatter.toString()
                            .indexOf("CBMformatter") > -1 ? sFormatter = "CBMformatter" : colModels[i].formatter.toString()
                            .indexOf("Date") > -1 ? sFormatter = "DATEformatter" : colModels[i].formatter.toString()
                            .indexOf("TIMEformatter") > -1 && (sFormatter = "TIMEformatter")), param1 += "rn" == colModels[i].name ? 0 == j ? colNames[i] + ":" + colModels[i].name + ":" + rValue + ":text:" : "^" + colNames[i] + ":" + colModels[i].name + ":" + rValue + ":text:" : 0 == j ? colNames[i] + ":" + colModels[i].name + ":" + rValue + ":" + colModels[i].sorttype + ":" + sFormatter : "^" + colNames[i] + ":" + colModels[i].name + ":" + rValue + ":" + colModels[i].sorttype + ":" + sFormatter, j++
                    }
                k++, param1 += "|"
            }
        });
        var title = $("#" + _gridname)
            .attr("title");
        param2 = __gridGroupHeader, param3 = title;
        var jsonData = {
            param1: param1
            , param2: param2
            , param3: param3
        };
        fn_SendData(jsonData, "/ERPWeb/common/ZEN_Excel.ashx?a=Export", AfterExcelExportFtn)
    }
}

function AfterExcelExportFtn(t) {
    var e = t.rows[0].OUT_RETURN.split("^");
    "ERROR" == e[0] ? Msgbox(1, e[1], "", "") : location.href = "/ERPWeb/common/AttachedFile/ExeclDownload.aspx?FileNM=" + e[1]
}

function fn_excelExport_virtual(t, e) {
    var r = $("#" + t)
        .jqGrid("getDataIDs")
        , n = ""
        , a = ""
        , o = ""
        , i = "N";
    if (0 != r.length) {
        var s = $("#" + t)
            .jqGrid("getGridParam", "colNames")
            , l = $("#" + t)
            .jqGrid("getGridParam", "colModel");
        $("#" + t)
            .jqGrid("getGridParam", "rownumbers") && (i = "Y");
        for (var u = 0; u < e.rows.length; u++) {
            for (var f = 0; f < s.length; f++) {
                var c = "";
                void 0 != l[f].formatter && (l[f].formatter.toString()
                    .indexOf("Currency") > -1 ? c = "AMTformatter" : l[f].formatter.toString()
                    .indexOf("PRICEformatter") > -1 && (c = "PRICEformatter"), l[f].formatter.toString()
                    .indexOf("Number") > -1 ? c = "QTYformatter" : l[f].formatter.toString()
                    .indexOf("FAMTformatter") > -1 ? c = "FAMTformatter" : l[f].formatter.toString()
                    .indexOf("FPRICEformatter") > -1 ? c = "FPRICEformatter" : l[f].formatter.toString()
                    .indexOf("FQTYformatter") > -1 ? c = "FQTYformatter" : l[f].formatter.toString()
                    .indexOf("Decimal") > -1 ? c = "RATEformatter" : l[f].formatter.toString()
                    .indexOf("CBMformatter") > -1 ? c = "CBMformatter" : l[f].formatter.toString()
                    .indexOf("Date") > -1 ? c = "DATEformatter" : l[f].formatter.toString()
                    .indexOf("TIMEformatter") > -1 && (c = "TIMEformatter")), n += "Y" == i ? 0 == f ? "순번:SEQ:" + (u + 1) + ":number:" : "^" + s[f] + ":" + l[f].name + ":" + e.rows[u][l[f].name] + ":" + l[f].sorttype + ":" + c : 0 == f ? s[f] + ":" + l[f].name + ":" + e.rows[u][l[f].name] + ":" + l[f].sorttype + ":" + c : "^" + s[f] + ":" + l[f].name + ":" + e.rows[u][l[f].name] + ":" + l[f].sorttype + ":" + c
            }
            n += "|"
        }
        var g = $("#" + t)
            .attr("title");
        a = __gridGroupHeader, o = g;
        var m = {
            param1: n
            , param2: a
            , param3: o
        };
        fn_SendData(m, "/ERPWeb/common/ZEN_Excel.ashx?a=Export", AfterExcelExportVirtualFtn)
    }
}

function AfterExcelExportVirtualFtn(t) {
    var e = t.rows[0].OUT_RETURN.split("^");
    "ERROR" == e[0] ? Msgbox(1, e[1], "", "") : location.href = "/ERPWeb/common/AttachedFile/ExeclDownload.aspx?FileNM=" + e[1]
}

function fn_excelUpload(t) {
    var e = "/ERPWeb/common/Popup/popExcelUpload.aspx"
        , r = modal_layer(e, 450, 150);
    void 0 != r && fn_excelImportSearch(t, r)
}

function fn_excelImportSearch(t, e) {
    for (var r = "IN_EXECL_PATH:" + e.substring(e.lastIndexOf("/") + 1, e.length), n = "", a = ($("#" + t)
                .jqGrid("getDataIDs"), $("#" + t)
                .jqGrid("getGridParam", "colNames")), o = $("#" + t)
            .jqGrid("getGridParam", "colModel"), i = 0; i < a.length; i++) o[i].hidden || "cb" != o[i].name && (n += o[i].name + "|");
    n = n.substring(0, n.length - 1), r += "^IN_COLNAME_LIST:" + n;
    var s = {
        param1: r
    };
    __curGridname = t, fn_SendData(s, "/ERPWeb/common/ZEN_Excel.ashx?a=Import", AfterExcelImportFtn)
}

function AfterExcelImportFtn(t) {
    t.rows.length > 0 && $("#" + __curGridname)
        .setGridParam({
            datastr: t
            , datatype: "jsonstring"
            , rowNum: t.rows.length
        })
        .trigger("reloadGrid"), __curGridname = ""
}

function fn_Popup_Elec_Create(t, e, r, n) {
    var a = 1e3
        , o = 1200
        , i = ((screen.height - o) / 2, (screen.width - a) / 2, "dialogwidth:" + a + "px;dialogHeight:" + a + "px;status:no;resizable:yes")
        , s = "http://180.67.220.70:8080/ubiWare/ware/approval/apprWrite.html?ubiSsoId=" + t + "&elecSeq=" + r + "&formId=" + n
        , l = window.showModalDialog(s, "elecCreate", i);
    return l
}

function fn_Popup_Elec_View(t, e, r) {
    var n = 1e3
        , a = 1200
        , o = ((screen.height - a) / 2, (screen.width - n) / 2, "dialogwidth:" + n + "px;dialogHeight:" + a + "px;status:no;resizable:yes")
        , i = "http://180.67.220.70:8080/ubiWare/ware/approval/apprView.html?ubiSsoId=" + t + "&elecSeq=" + r
        , s = window.showModalDialog(i, "elecCreate", o);
    return s
}

function fn_myMenu(t, e, r) {
    var n = "";
    n += "IN_BUBIN:" + t, n += "^IN_USER_ID:" + e, n += "^IN_MENU_ID:" + r, n += "|";
    var a = {
        param1: n
    };
    fn_SendData(a, "/ERPWeb/common/ZEN_Common.ashx?a=SetMyMenu", AfterSaveMyMenu)
}

function AfterSaveMyMenu(t) {
    var e = t.rows[0].OUT_RETURN.split("^");
    if ("ERROR" == e[0] && "DUP" == e[1]) {
        if (retMsg = Msgbox(2, e[2], "", ""), 1 != retMsg) return !1;
        var r = "";
        r += "IN_BUBIN:" + e[3], r += "^IN_USER_ID:" + e[4], r += "^IN_MENU_ID:" + e[5], r += "|";
        var n = {
            param1: r
        };
        fn_SendData(n, "/ERPWeb/common/ZEN_Common.ashx?a=DelMyMenu", AfterDeleteMyMenu)
    } else {
        if ("ERROR" == e[0]) return Msgbox(1, e[1], "", ""), !1;
        Msgbox(1, "저장 되었습니다.")
    }
    return !0
}

function AfterDeleteMyMenu(t) {
    var e = t.rows[0].OUT_RETURN.split("^");
    return "ERROR" == e[0] ? (Msgbox(1, e[1]), !1) : (Msgbox(1, "삭제 되었습니다."), !0)
}
String.prototype.padLeft = function () {
    var t = arguments
        , e = t[0];
    padStr = 1 == t.length ? " " : t[1];
    for (var r = "", n = Number(e) - String(this)
            .length, a = 0; n > a; a++) r += String(padStr);
    return r += this, r.substring(r.length - e)
}, String.prototype.padRight = function () {
    var t = arguments
        , e = t[0];
    paddingChar = 1 == t.length ? " " : t[1];
    for (var r = "", n = Number(e) - String(this)
            .length, a = 0; n > a; a++) r += String(paddingChar);
    return r = this + r, r.substring(0, e)
};
