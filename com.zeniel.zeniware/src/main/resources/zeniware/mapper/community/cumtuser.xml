<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="comtUser">

	<resultMap type="zeniware.community.vo.ComtVo" id="comtVoMap">
		<id column="COMP_ID"			property="compId" />
		<id column="FC_COMT_ID"			property="fcComtId" />
		<result	column="FC_COMT_ID"		property="fcComtId" />
		<result	column="FC_ADM_SEQ"		property="fcAdmSeq" />
		<result column="COMP_ID"		property="compId" />
		<result column="CUMT_NM"		property="cumtNm" />
		<result column="CUMT_COMMENT"	property="cumtComment" />
		<result column="ADM_ACT_YN"		property="admActYn" />
		<result column="OPEN_YN"		property="openYn" />
		<result column="REG_DATE"		property="regDate" />
		<result column="MOD_DATE"		property="modDate" />
		<result column="REG_USER_ID"	property="regUserId" />
		<result column="MOD_USER_ID"	property="modUserId" />
		<result column="MAST_GUBUN"		property="mastGubun" />
		<result column="JOIN_YN"		property="joinYn" />
		<result column="TYPE_GUBUN"		property="typeGubun" />
		<result column="TOTAL_NUM"		property="talNum" />
		<result column="USER_NAME"		property="userNm" />
	</resultMap>

	<resultMap type="zeniware.community.vo.ComtAllListVo" id="ComtAllListVoMap">
		<id column="COMP_ID"				property="compId" />
		<id column="FC_COMT_ID"			property="fcComtId" />
		<result column="fcComtId"		property="fcComtId" />
		<result column="compId"			property="compId" />
		<result column="userId"			property="userId" />
		<result column="userNm"			property="userNm" />
		<result column="deptId"			property="deptId" />
		<result column="deptNm"			property="deptNm" />
		<result column="talNum"			property="talNum" />
		<result column="typeGubun"		property="typeGubun" />
		<result column="boardInfoId"		property="boardInfoId" />
		<result column="mastGubun"		property="mastGubun" />
		<result column="taltelGubun"		property="taltelGubun" />
		<result column="inviteYn"			property="inviteYn" />
		<result column="joinYn"				property="joinYn" />
		<result column="REG_DATE"		property="regDate" />
	</resultMap>

	<select id="comtUser.getComntUserJoinList" parameterType="map" resultMap="comtVoMap">
		SELECT
			CI.FC_COMT_ID, CI.FC_ADM_SEQ, CI.COMP_ID, CI.CUMT_NM, CI.CUMT_COMMENT, CI.ADM_ACT_YN,
			CI.OPEN_YN, CI.REG_DATE, CI.MOD_DATE, CI.REG_USER_ID, CI.MOD_USER_ID,
			(
				SELECT MAST_GUBUN FROM FC_COMT_ADMN_USER
				WHERE FC_COMT_ID = CI.FC_COMT_ID
					AND USER_ID = #{userId, jdbcType=VARCHAR}
			) AS MAST_GUBUN,
			CAI.JOIN_YN
		FROM
			FC_CUMT_INFO CI
			INNER JOIN FC_CUMT_ADD_INFO CAI ON CI.FC_COMT_ID = CAI.FC_COMT_ID AND CAI.TYPE_GUBUN = 'C'
		WHERE 1 = 1
			AND CI.ADM_ACT_YN = #{admActYn, jdbcType=VARCHAR}
			AND CI.COMP_ID = #{compId, jdbcType=VARCHAR}
			AND CAI.USER_ID = #{userId, jdbcType=VARCHAR}
		ORDER BY CI.CUMT_NM  ASC
	</select>

	<!-- 커뮤니티 생성 전채(사용자 조회 시) 조회 -->
	<select id="comtUser.getComtAllListData" parameterType="map" resultMap="comtVoMap">
		SELECT
			CI.FC_COMT_ID, CI.FC_ADM_SEQ, CI.COMP_ID, CI.CUMT_NM, CI.CUMT_COMMENT, CI.ADM_ACT_YN,
			CI.OPEN_YN, CI.REG_DATE, CI.MOD_DATE, CI.REG_USER_ID, CI.MOD_USER_ID,
			(
				SELECT B.USER_NM FROM FC_CUMT_ADD_INFO A, FH_USER B
				WHERE A.FC_COMT_ID = CI.FC_COMT_ID
					AND A.COMP_ID = B.COMP_ID
					AND A.USER_ID = B.USER_ID
					AND A.MAST_GUBUN = 'M'
					AND A.TYPE_GUBUN = 'C'
					AND A.COMP_ID = #{compId, jdbcType=VARCHAR}
					AND A.USER_ID = #{userId, jdbcType=VARCHAR}
			) AS USER_NAME,
			(
				SELECT COUNT(USER_ID) + '명' FROM FC_CUMT_ADD_INFO A
				WHERE A.FC_COMT_ID = CI.FC_COMT_ID
					AND A.TYPE_GUBUN = 'C'
					AND A.COMP_ID = #{compId, jdbcType=VARCHAR}
			) AS TOTAL_NUM,
			(
				SELECT JOIN_YN FROM FC_CUMT_ADD_INFO A
				WHERE A.FC_COMT_ID = CI.FC_COMT_ID
					AND A.COMP_ID = CI.COMP_ID
					AND A.COMP_ID = #{compId, jdbcType=VARCHAR}
					AND A.USER_ID = #{userId, jdbcType=VARCHAR}
			) AS JOIN_YN,
			(
				SELECT MAST_GUBUN FROM FC_CUMT_ADD_INFO A
				WHERE A.FC_COMT_ID = CI.FC_COMT_ID
					AND A.COMP_ID = CI.COMP_ID
					AND A.COMP_ID = #{compId, jdbcType=VARCHAR}
					AND A.USER_ID = #{userId, jdbcType=VARCHAR}
					AND A.JOIN_YN = 'Y'
			) AS MAST_GUBUN
		FROM
			FC_CUMT_INFO CI
		WHERE 1 = 1
			AND CI.ADM_ACT_YN = #{admActYn, jdbcType=VARCHAR}
			AND CI.COMP_ID = #{compId, jdbcType=VARCHAR}
		ORDER BY CI.CUMT_NM  ASC
	</select>

	<select id="comtUser.getComtInofUserMastList" parameterType="map" resultType="hashmap">
		/* comtUser.getComtInofUserMastList */
		SELECT
			CAI.USER_ID,
			(
				SELECT USER_NM FROM FH_USER WHERE USER_ID = CAI.USER_ID
			) AS USER_NAME
		FROM
			FC_COMT_ADMN_USER CAI
		WHERE 1 = 1
			AND CAI.COMP_ID = #{compId, jdbcType=VARCHAR}
			AND CAI.FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND CAI.TYPE_GUBUN = 'C'
			AND CAI.MAST_GUBUN = 'M'
	</select>

	<select id="comtUser.getBasicComtInfo" parameterType="map" resultType="hashmap">
		SELECT
			FC_ADM_SEQ, COMP_ID, CUMT_TYPE, FILE_SIZE_YN, FILE_SIZE,
			FILE_ADD_YN, FILE_ADD_CNT, FILE_NOT_NAME, REG_DATE, ADM_USER_ID
		FROM
			FC_ADMN_MAST
		WHERE 1 = 1
			AND COMP_ID = #{compId, jdbcType=VARCHAR}
	</select>

	<!-- 커뮤니티 개설 신청명 중복 조회 -->
	<select id="comtUser.getComtInfoCnt" parameterType="zeniware.community.vo.ComtVo" resultType="int">
		SELECT
			COUNT(FC_ADM_SEQ) AS CNT
		FROM
			FC_CUMT_INFO
		WHERE 1 = 1
			AND ADM_ACT_YN IN ('Y','N')
			AND CUMT_NM = #{cumtNm, jdbcType=VARCHAR}
	</select>

	<!-- 커뮤니티 개설 신청 처리 -->
	<insert id="comtUser.insertNewComtInfoAdd" parameterType="zeniware.community.vo.ComtVo">
		INSERT INTO FC_CUMT_INFO
		(
			FC_COMT_ID,
			FC_ADM_SEQ,
			COMP_ID,
			CUMT_NM,
			CUMT_COMMENT,
			ADM_ACT_YN,
			OPEN_YN,
			REG_DATE,
			REG_USER_ID
		)
		SELECT
			#{fcComtId, jdbcType=VARCHAR},
			ifnull ( MAX(FC_ADM_SEQ), 1),
			#{compId, jdbcType=VARCHAR},
			#{cumtNm, jdbcType=VARCHAR},
			#{cumtComment, jdbcType=VARCHAR},
			#{admActYn, jdbcType=VARCHAR},
			#{openYn, jdbcType=VARCHAR},
			NOW(),
			#{regUserId, jdbcType=VARCHAR}
		FROM
			FC_CUMT_INFO
		WHERE 1 = 1
			AND COMP_ID = #{compId, jdbcType=VARCHAR}
	</insert>

	<!-- 커뮤니티 개설 신청 처리의 사용자 정보 입력 처리 -->
	<insert id="comtUser.insertNewComtAddUserInfo" parameterType="zeniware.community.vo.ComtVo">
		INSERT INTO FC_CUMT_ADD_INFO
		(
			FC_COMT_ID,
			COMP_ID,
			USER_ID,
			DEPT_ID,
			TYPE_GUBUN,
			BOARD_INFO_ID,
			MAST_GUBUN,
			INVITE_YN, -- 10: 초대	-- 20: 미 초대	-- 30 : 일반가입	-- 40 : 가입요청
			JOIN_YN,
			REG_DATE
		) VALUES (
			#{fcComtId, jdbcType=VARCHAR},
			#{compId, jdbcType=VARCHAR},
			#{regUserId, jdbcType=VARCHAR},
			#{deptId, jdbcType=VARCHAR},
			#{typeGubun, jdbcType=VARCHAR},
			#{boardInfoId, jdbcType=NUMERIC},
			#{mastGubun, jdbcType=VARCHAR},
			#{inviteYn, jdbcType=VARCHAR},
			#{joinYn, jdbcType=VARCHAR},
			NOW()
		)
	</insert>

	<!-- 커뮤니티 가입신청 -->
	<insert id="comtUser.setInsertComtAllInfoUserAdd" parameterType="hashmap">
		INSERT INTO FC_CUMT_ADD_INFO
		(
			FC_COMT_ID,
			COMP_ID,
			USER_ID,
			DEPT_ID,
			TYPE_GUBUN,
			BOARD_INFO_ID,
			MAST_GUBUN,
			INVITE_YN,
			JOIN_YN,
			REG_DATE
		) VALUES (
			#{fcComtId, jdbcType=VARCHAR},
			#{compId, jdbcType=VARCHAR},
			#{userId, jdbcType=VARCHAR},
			#{deptId, jdbcType=VARCHAR},
			#{typeGubun, jdbcType=VARCHAR},
			#{boardInfoId, jdbcType=NUMERIC},
			#{mastGubun, jdbcType=VARCHAR},
			#{inviteYn, jdbcType=VARCHAR},
			#{joinYn, jdbcType=VARCHAR},
			NOW()
		)
	</insert>

	<!-- 커뮤니티 신청 시 운영자 정보 입력 -->
	<insert id="comtUser.setInsertComtInfoAdmUserAdd" parameterType="hashmap">
		/* comtUser.setInsertComtInfoAdmUserAdd */
		INSERT INTO FC_COMT_ADMIN_USER
		(
			FC_COMT_ID,
			BOARD_INFO_ID,
			COMP_ID,
			USER_ID,
			DEPT_ID,
			MAST_GUBUN,
			TYPE_GUBUN
		) VALUES (
			#{fcComtId, jdbcType=VARCHAR},
			#{boardInfoId, jdbcType=NUMERIC},
			#{compId, jdbcType=VARCHAR},
			#{userId, jdbcType=VARCHAR},
			#{deptId, jdbcType=VARCHAR},
			#{mastGubun, jdbcType=VARCHAR},
			#{typeGubun, jdbcType=VARCHAR}
		)
	</insert>

	<!-- 커뮤니티 상세정보view(fcComtId) -->
	<select id="comtUser.comtview.getComtInfoDetail" parameterType="hashmap" resultMap="comtVoMap">
		SELECT
			FC_COMT_ID, FC_ADM_SEQ, COMP_ID, CUMT_NM, CUMT_COMMENT, ADM_ACT_YN,
			OPEN_YN, REG_DATE, MOD_DATE, REG_USER_ID, MOD_USER_ID
		FROM
			FC_CUMT_INFO
		WHERE 1 = 1
			AND COMP_ID = #{compId, jdbcType=VARCHAR}
			AND FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
		ORDER BY CUMT_NM  ASC
	</select>

	<!-- 커뮤니티 운영자 정보 전체 삭제  -->
	<delete id="comtUser.setUpdateComtInfoAddUserAll" parameterType="hashmap">
		UPDATE FC_CUMT_ADD_INFO SET
			MAST_GUBUN = 'U'
		WHERE COMP_ID = #{compId, jdbcType=VARCHAR}
			AND FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND TYPE_GUBUN = 'C'
			AND MAST_GUBUN = 'M'
	</delete>

	<!-- 커뮤니티 가입여부 조회 -->
	<select id="comtUser.getComtAddInfoCnt" parameterType="hashmap" resultType="int">
		SELECT
			COUNT(USER_ID) AS CNT
		FROM
			FC_CUMT_ADD_INFO
		WHERE 1 = 1
			AND COMP_ID = #{compId, jdbcType=VARCHAR}
			AND FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND USER_ID = #{userId, jdbcType=VARCHAR}
	</select>

	<!-- 커뮤니티 멤버 전체 조회 -->
	<select id="comtUser.getComtInfoMemberAllList" parameterType="hashmap" resultType="hashmap">
		/* comtUser.getComtInfoMemberAllList */
		SELECT
			A.FC_COMT_ID AS fcComtId,
			A.COMP_ID AS compId,
			A.USER_ID AS userId,
			FU.USER_NM AS userNm,
			A.DEPT_ID AS deptId,
			FD.DEPT_NM AS deptNm,
			(
				SELECT COUNT(C.BOARD_SEQ) FROM FC_BORD_INFO B, FC_CUMT_BOAD_INFO C
				WHERE B.BOARD_INFO_ID = C.BOARD_INFO_ID
					AND A.FC_COMT_ID = B.FC_COMT_ID
			) AS talNum,
			A.TYPE_GUBUN AS typeGubun,
			(
				SELECT MAST_GUBUN FROM FC_COMT_ADMN_USER
				WHERE USER_ID = A.USER_ID
					AND FC_COMT_ID = A.FC_COMT_ID
			) AS mastGubun,
			A.BOARD_INFO_ID AS boardInfOId,
			A.INVITE_YN AS inviteYn,
			A.JOIN_YN AS joinYn,
			A.REG_DATE AS regDate
		FROM
			FC_CUMT_ADD_INFO A
			INNER JOIN FH_USER FU ON A.USER_ID = FU.USER_ID AND FU.COMP_ID = #{compId, jdbcType=VARCHAR}
			INNER JOIN FH_DEPT FD ON A.DEPT_ID = FD.DEPT_ID AND FD.COMP_ID = #{compId, jdbcType=VARCHAR}
		WHERE 1 = 1
			AND A.FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND A.COMP_ID = #{compId, jdbcType=VARCHAR}
			<!-- CALL SP_FC_COMT_ALL_MEMB_LIST(#{compId}, #{fcComtId}); -->
	</select>

	<!--  -->
	<select id="comtUser.getComtAdmMemberInfo" parameterType="hashmap" resultType="int">
		/* comtUser.getComtAdmMemberInfo */
		SELECT
			COUNT(*) AS CNT
		FROM
			FC_COMT_ADMN_USER
		WHERE 1 = 1
			AND FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND USER_ID = #{userId, jdbcType=VARCHAR}
			AND MAST_GUBUN IN ('M','B')
			AND TYPE_GUBUN = 'C'
	</select>

	<!-- 커뮤니티 멤버 탈퇴 처리 -->
	<delete id="comtUser.setDeleteComtInfoMemUser" parameterType="hashmap">
		DELETE FROM FC_CUMT_ADD_INFO
		WHERE FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND USER_ID = #{userId, jdbcType=VARCHAR}
	</delete>

	<!-- 커뮤니티 가입승인 처리 -->
	<update id="comtUser.setUpdateComtInfoMemUser" parameterType="hashmap">
		UPDATE FC_CUMT_ADD_INFO SET
			JOIN_YN = 'Y',
			JOIN_USER_ID = #{reguserId, jdbcType=VARCHAR},
			JOIN_REG_DATE = NOW()
		WHERE FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND USER_ID = #{userId, jdbcType=VARCHAR}
	</update>

	<!-- 커뮤니티 페쇄 신청 처리 -->
	<insert id="comtUser.setInsertComtInfoBasicClose" parameterType="hashmap">
		INSERT INTO FC_COMT_CLOSE_CEMT
		(
			FC_COMT_ID,
			COMP_ID,
			USER_ID,
			CLOSE_TITLE,
			CLOSE_COMMENT,
			REG_DATE
		) VALUES (
			#{fcComtId, jdbcType=VARCHAR},
			#{compId, jdbcType=VARCHAR},
			#{userId, jdbcType=VARCHAR},
			#{closeTitle, jdbcType=VARCHAR},
			#{closeComment, jdbcType=VARCHAR},
			NOW()
		)
	</insert>

	<!-- 커뮤니티 페쇄 처리 -->
	<update id="comtUser.setUpdateComtInfoBasicClose" parameterType="hashmap">
		UPDATE FC_CUMT_INFO SET
			ADM_ACT_YN = 'P',
			MOD_DATE = NOW(),
			REG_USER_ID = #{userId, jdbcType=VARCHAR}
		WHERE FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND COMP_ID = #{compId, jdbcType=VARCHAR}
	</update>

	<!-- 커뮤니티 메일 발송 내용 DB 저장 처리 -->
	<insert id="comtUser.setInsertComtInfoMailSend" parameterType="hashmap">
		INSERT INTO FC_COMT_MAIL_SEND
		(
			FC_COMT_ID,
			COMP_ID,
			USER_ID,
			MAIL_TITLE,
			MAIL_TEXT,
			REG_DATE
		) VALUES (
			#{fcComtId, jdbcType=VARCHAR},
			#{compId, jdbcType=VARCHAR},
			#{userId, jdbcType=VARCHAR},
			#{mailTitle, jdbcType=VARCHAR},
			#{mailText, jdbcType=VARCHAR},
			NOW()
		)
	</insert>

	<!-- 커뮤니티 상세보기 수정 처리 -->
	<update id="comtUser.setInsertUserComtBasicInfo" parameterType="hashmap">
		/* comtUser.setInsertUserComtBasicInfo */
		UPDATE FC_CUMT_INFO SET
			CUMT_NM = #{cumtNm, jdbcType=VARCHAR}
			,CUMT_COMMENT = #{cumtComment, jdbcType=VARCHAR}
			,OPEN_YN = #{openYn, jdbcType=VARCHAR}
			,MOD_DATE = NOW()
			,MOD_USER_ID = #{userId, jdbcType=VARCHAR}
		WHERE FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND COMP_ID = #{compId, jdbcType=VARCHAR}
	</update>

	<!-- 커뮤니티 상세보기 수정의 커뮤니티명 중복 확인 -->
	<select id="comtUser.getInserComtBasicInfoNm" parameterType="hashmap" resultType="int">
		/* comtUser.getInserComtBasicInfoNm */
		SELECT
			COUNT(FC_COMT_ID) AS CNT
		FROM
			FC_CUMT_INFO
		WHERE COMP_ID = #{compId, jdbcType=VARCHAR}
			AND CUMT_NM = #{cumtNm, jdbcType=VARCHAR}
	</select>

	<!-- 커뮤니티 가입여부 조회 -->
	<select id="comtUser.getComtJoinCnt" parameterType="hashmap" resultType="int">
		/* comtUser.getComtJoinCnt */
		SELECT
			COUNT(USER_ID) AS CNT
		FROM
			FC_CUMT_ADD_INFO
		WHERE FC_COMT_ID = #{fcComtId, jdbcType=VARCHAR}
			AND USER_ID = #{userId,  jdbcType=VARCHAR}
	</select>
</mapper>